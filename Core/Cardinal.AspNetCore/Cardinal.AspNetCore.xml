<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cardinal.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Cardinal.AspNetCore.Entity">
            <summary>
            Classe abstrata que serve de base para todas as entidades do sistema.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Entity.Id">
            <summary>
            Índice único da entidade.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Entity.Created">
            <summary>
            Data de criação da entidade.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Entity.Modified">
            <summary>
            Data de modificação da entidade.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Entity.Deleted">
            <summary>
            Data de exclusão da entidade.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Entity.Version">
            <summary>
            Versão do registro da linha.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.CardinalConstants">
            <summary>
            Classe estática com constantes de sistema.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalConstants.BaseName">
            <summary>
            Nome base do serviço da aplicação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalConstants.BaseVersion">
            <summary>
            Versão base do serviço da aplicação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalConstants.ApplicationName">
            <summary>
            Nome da aplicação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalConstants.Initialized">
            <summary>
            Identificação se as constantes do serviço foram inicializadas.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalConstants.Initialize(System.String,System.String)">
            <summary>
            Método de inicialização do serviço da aplicação.
            </summary>
            <param name="version">Versão base do serviço da aplicação.</param>
            <param name="baseName">Nome da aplicação.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalConstants.Initialize(Cardinal.AspNetCore.ICardinalVersion,System.String)">
            <summary>
            Método de inicialização do serviço da aplicação.
            </summary>
            <param name="version">Versão base do serviço da aplicação.</param>
            <param name="baseName">Nome da aplicação.</param>
        </member>
        <member name="T:Cardinal.AspNetCore.DateField">
            <summary>
            Enumerador de campos de datas.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Days">
            <summary>
            Dias
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Hours">
            <summary>
            Horas
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Minutes">
            <summary>
            Minutos
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Seconds">
            <summary>
            Segundos.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Milissecounds">
            <summary>
            Milissegundos.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.DateField.Ticks">
            <summary>
            Instantes
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.VersionState">
            <summary>
            Enumerador que classifica a comparação entre versões.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.VersionState.Unknow">
            <summary>
            Comparação desconhecida.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.VersionState.Newer">
            <summary>
            Indica que a versão comparada é mais nova.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.VersionState.Older">
            <summary>
            Indica que a versão comparada é mais antiga.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.VersionState.Current">
            <summary>
            Indica que a versão comparada é equivalente.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Exceptions.CardinalException">
            <summary>
            Classe de exceção de serviços de Api.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.CardinalException.#ctor">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.CardinalException.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.CardinalException.#ctor(System.String,System.Exception)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
            <param name="innerException">Exceção interior.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.CardinalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método construtor.
            </summary>
            <param name="info"> The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Cardinal.AspNetCore.Exceptions.InvalidVersionException">
            <summary>
            Classe de exceção ligada à validação de versões.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.InvalidVersionException.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.InvalidVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
            <param name="innerException">Exceção interior.</param>
        </member>
        <member name="T:Cardinal.AspNetCore.Exceptions.ServiceException">
            <summary>
            Classe de exceção de serviços de Api.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Exceptions.ServiceException.StatusCode">
            <summary>
            Código de status da exceção.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Exceptions.ServiceException.StatusMessage">
            <summary>
            Mensagem de status da exceção.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceException.#ctor">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceException.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            Método construtor.
            </summary>
            <param name="statusCode">Código de status da exceção.</param>
            <param name="message">Mensagem de exceção.</param>
            <param name="innerException">Exceção interior.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceException.#ctor(System.Net.HttpStatusCode,System.Boolean)">
            <summary>
            Método construtor.
            </summary>
            <param name="statusCode">Código de status da exceção.</param>
            <param name="includeStatusCode">Indica se deve ser adicionado o código de erro à descrição.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceException.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="statusCode">Código de status da exceção.</param>
            <param name="description">Indica se deve ser adicionado o código de erro à descrição.</param>
        </member>
        <member name="T:Cardinal.AspNetCore.Exceptions.ServiceNotFoundException">
            <summary>
            Classe de excessão causada por serviço não encontrado.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceNotFoundException.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ServiceNotFoundException.#ctor(System.Type)">
            <summary>
            Método construtor.
            </summary>
            <param name="type">Tipo de classe responsável pela exceção.</param>
        </member>
        <member name="P:Cardinal.AspNetCore.Exceptions.ValidationException.Validations">
            <summary>
            Coleção de validações contidas na exceção.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.#ctor">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Método construtor.
            </summary>
            <param name="message">Mensagem de exceção.</param>
            <param name="innerException">Exceção interior.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método construtor.
            </summary>
            <param name="info"> The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.Add(System.String,System.String)">
            <summary>
            Método que adiciona uma mensagem de validação à lista.
            </summary>
            <param name="field">Campo relacionado à validação.</param>
            <param name="message">Mensagem de validação.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.Any">
            <summary>
            Método que indica se há mensagens de validação na exceção.
            </summary>
            <returns>Verdadeiro caso exista alguma mensagem de validação ou falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Exceptions.ValidationException.GetValidationResponse">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Extensions.DateTimeExtensions">
            <summary>
            Classe de extensões para DateTime.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Extensions.DateTimeExtensions.InitialDate">
            <summary>
            Data Inicial de um DateTime.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.DateTimeExtensions.IsBetween(System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Extensão que verifica se uma data está entre duas datas específicas.
            </summary>
            <param name="source">Esta data.</param>
            <param name="initialDate">Data inicial do período.</param>
            <param name="finalDate">Data final do período.</param>
            <param name="includeExtremities">Se devem ser incluidas as extremidades do período.</param>
            <returns>Verdadeiro caso a data esteja dentro do período e falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.DateTimeExtensions.Diference(System.DateTime,System.DateTime,Cardinal.AspNetCore.DateField)">
            <summary>
            Extensão que traz a diferença da data atual à uma data informada.
            </summary>
            <param name="source">Esta data.</param>
            <param name="date">Data à ser comparada.</param>
            <param name="field">Tipo de campo à ser retornado.</param>
            <returns>Diferença entre as datas baseando-se no tipo de campo solicitado.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.DateTimeExtensions.GetResult(System.TimeSpan,Cardinal.AspNetCore.DateField)">
            <summary>
            
            </summary>
            <param name="timeSpan"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.GuidExtensions.ToUpper(System.Guid)">
            <summary>
            Método de extensão que transforma este Guid em uma representação string em caixa alta.
            </summary>
            <param name="guid">Este Objeto.</param>
            <returns>Representação String em caixa alta.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.HttpStatusCodeExtensions.GetDescription(System.Net.HttpStatusCode)">
            <summary>
            Método que obtém a descrição de um código de status.
            </summary>
            <param name="statusCode">Código de status o qual se dejesa a descrição.</param>
            <returns>Descrição do código de status.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.HttpStatusCodeExtensions.GetDescription(System.Net.HttpStatusCode,System.Boolean)">
            <summary>
            Método que obtém a descrição de um código de status.
            </summary>
            <param name="statusCode">Código de status o qual se dejesa a descrição.</param>
            <param name="includeStatusCode">Indica se deve ser adicionado o código de erro à descrição.</param>
            <returns>Descrição do código de status.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.MemberInfoExtensions.AsType(System.Reflection.MemberInfo)">
            <summary>
            Return the type from a MemberInfo.
            </summary>
            <param name="memberInfo">The MemberInfo to convert.</param>
            <returns>The type from a MemberInfo.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.MemberInfoExtensions.GetQualifiedName(System.Reflection.MemberInfo)">
            <summary>
            Return the qualified name from a member info.
            </summary>
            <param name="memberInfo">The member info to convert.</param>
            <returns>The qualified name from a member info.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.MemberInfoExtensions.GetReflectedType(System.Reflection.MemberInfo)">
            <summary>
            Return the reflected type from a member info.
            </summary>
            <param name="memberInfo">The member info to convert.</param>
            <returns>The reflected type from a member info.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.StringExtensions.IsEquals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="comparedValue"></param>
            <param name="ignoreIfNull"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.StringExtensions.IsNumeric(System.String,System.Int32)">
            <summary>
            Método que verifica se uma string é numérica.
            </summary>
            <param name="value">Valor string à ser validado.</param>
            <param name="lenght">Tamanho exato do número de casas núméricas.</param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.StringExtensions.Capitalize(System.String,System.String[])">
            <summary>
            Método que capitaliza uma string.
            </summary>
            <param name="value">Valor à ser capitalizado.</param>
            <param name="exclusions">Exclusões de capitalização.</param>
            <returns>String capitalizada.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.StringExtensions.ToByteArray(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.StringExtensions.ToByteArray(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.AsMemberInfo(System.Type)">
            <summary>
            Return the memberInfo from a type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The memberInfo from a type.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsNullable(System.Type)">
            <summary>
            Determine if a type is null-able.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is null-able; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.ToNullable(System.Type)">
            <summary>
            Return the type from a nullable type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The type from a nullable type.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.GetInnerElementType(System.Type)">
            <summary>
            Return the collection element type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The collection element type from a type.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsCollection(System.Type)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsCollection(System.Type,System.Type@)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <param name="elementType">out: the element type of the collection.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsEnum(System.Type)">
            <summary>
            Determine if a type is an enumeration.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsDateTime(System.Type)">
            <summary>
            Determine if a type is a DateTime.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a DateTime; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsTimeSpan(System.Type)">
            <summary>
            Determine if a type is a TimeSpan.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a TimeSpan; false otherwise.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.IsIQueryable(System.Type)">
            <summary>
            Determines whether the given type is IQueryable.
            </summary>
            <param name="type">The type</param>
            <returns><c>true</c> if the type is IQueryable.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.GetInnerMostElementType(System.Type)">
            <summary>
            Returns the innermost element type for a given type, dealing with
            nullables, arrays, etc.
            </summary>
            <param name="type">The type from which to get the innermost type.</param>
            <returns>The innermost element type</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Extensions.TypeExtensions.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Cardinal.AspNetCore.CardinalVersion">
            <summary>
            Classe que representa a versão de um elemento da aplicação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalVersion.Major">
            <summary>
            Valor maior da versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalVersion.Minor">
            <summary>
            Valor menor da versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalVersion.Build">
            <summary>
            Valor da atualização da versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.CardinalVersion.Revision">
            <summary>
            Valor da revisão da versão.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.#ctor">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.#ctor(System.String)">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Método Construtor.
            </summary>
            <param name="major">Valor maior da versão.</param>
            <param name="minor">Valor menor da versão.</param>
            <param name="build">Valor de build da versão.</param>
            <param name="revision">Valor da revisão da versão.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.Compare(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método que faz a comparação entre versõoes.
            </summary>
            <param name="version">Versão à ser comparada com esta.</param>
            <returns>Enumerador representando o resultado da comparação entre as versões.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.EqualsOrNewer(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método que verifica se a versão informada é igual ou mais nova que a versão registrada nessa instância.
            </summary>
            <param name="version">Versão à ser comparada.</param>
            <returns>Verdadeiro caso a versão informada seja igual ou mais recente que esta ou falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.EqualsOrOlder(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método que verifica se a versão informada é igual ou mais antiga que a versão registrada nessa instância.
            </summary>
            <param name="version">Versão à ser comparada.</param>
            <returns>Verdadeiro caso a versão informada seja igual ou mais antiga que esta ou falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.Equals(System.Object)">
            <summary>
            Método que verifica se o objeto informado é igual à esta instância.
            </summary>
            <param name="obj">Objeto à ser comparado.</param>
            <returns>Verdadeiro caso os objetos sejam iguais e Falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.GetHashCode">
            <summary>
            Método que calcula o hashCode desta instância.
            </summary>
            <returns>HashCode da instância dessa classe.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.ToString">
            <summary>
            Método que retorna a representação string desta instância.
            </summary>
            <returns>Representação string da instância desta classe.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.CardinalVersion.ToString(System.Boolean)">
            <summary>
            Método que retorna a representação string desta instância.
            </summary>
            <param name="detailed">Indica se é necessário detalhar a versão.</param>
            <returns>Representação string da instância desta classe.</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Interfaces.ICardinalController">
            <summary>
            Interface padrão de todas as classes de controle.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.ICardinalVersion">
            <summary>
            Interface que representa a estrutura da versão de um componente do sistema, seja uma biblioteca, executável ou módulo.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.ICardinalVersion.Major">
            <summary>
            Número majoritário de versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.ICardinalVersion.Minor">
            <summary>
            Número minoritário de versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.ICardinalVersion.Build">
            <summary>
            Número de atualização de versão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.ICardinalVersion.Revision">
            <summary>
            Número de revisão de versão.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.ICardinalVersion.Compare(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método para a comparação entre versões.
            </summary>
            <param name="version">Versão à ser comparada à esta.</param>
            <returns>Enumerador do tipo <see cref="T:Cardinal.AspNetCore.VersionState"/> que indica o resultado da comparação.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.ICardinalVersion.EqualsOrNewer(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método para verifica se esta versão é igual ou mais nova que a versão informada.
            </summary>
            <param name="version">Versão à ser comparada à esta.</param>
            <returns>Verdadeiro caso esta versão seja igual ou mais recente que a versão informada e Falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.ICardinalVersion.EqualsOrOlder(Cardinal.AspNetCore.ICardinalVersion)">
            <summary>
            Método para verifica se esta versão é igual ou mais antiga que a versão informada.
            </summary>
            <param name="version">Versão à ser comparada à esta.</param>
            <returns>Verdadeiro caso esta versão seja igual ou mais antiga que a versão informada e Falso caso contrário.</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Localization.Resource">
            <summary>
              Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.ResourceManager">
            <summary>
              Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.Culture">
            <summary>
              Substitui a propriedade CurrentUICulture do thread atual para todas as
              pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.ERROR_SERVICE_NOT_FOUND">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The service $[SERVICE_NAME] was not found! Check that the service has been properly implemented and registered!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.ERROR_WRONG_VERSION_FORMAT">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Wrong format exception: Expected [major.minor.build.revision] but received $[VERSION]!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_100">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a There are currently no problems detected. The request can continue..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_101">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Mudança de protocolo aceita..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_200">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request has succeeded..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_201">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request has been fulfilled and resulted in a new resource being created..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_202">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request has been accepted for processing, but the processing has not been completed..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_203">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_204">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_205">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_206">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_300">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Multiple responses available..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_301">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The requested resource has been moved to a new address..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_302">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The requested resource has been temporarily moved to another address..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_400">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request was not accepted due to missing or not validated data. Check the content of the request..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_401">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request was not authorized. Check if the session is active, the access token has been informed or if the active user has authorization to access this service..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_403">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Access to the requested service is not allowed..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_404">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The requested service or resource was not found..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_405">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The method specified in the request is not allowed for the requested resource..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_406">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_407">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Proxy authentication is required before completing the request..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_408">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The client did not produce a request within the time that the server was prepared to wait..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_409">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The request could not be completed due to a conflict with the current state of the resource..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_410">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The requested resource is no longer available at the server and no forwarding address is known..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_411">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server refuses to accept the requests without a defined Content- Length..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_413">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server is refusing to process a request because the request entity is larger than the server is willing or able to process.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_414">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_415">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_418">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a I&apos;m a teapot..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_500">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Internal server error!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Localization.Resource.STATUS_CODE_UNKNOW">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Unknow response $[VALUE]!.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Utils.ResourceUtils">
            <summary>
            Classe estática de utilidades para recursos.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Utils.ResourceUtils.Translate(System.String,Cardinal.AspNetCore.Models.TranslationSet[])">
            <summary>
            Método para a tradução de um texto para o idioma atual.
            </summary>
            <param name="text">Texto à ser traduzido.</param>
            <param name="values">Vetor de valores à serem substituídos durante a tradução.</param>
            <returns>Texto traduzido.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Utils.ResourceUtils.Set(System.String,System.Object)">
            <summary>
            Método que cria um parâmetro de tradução.
            </summary>
            <param name="key">Chave to elemento.</param>
            <param name="value">Valor do elemento.</param>
            <returns>Parâmetro de tradução do texto.</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Utils.StatusCodeUtils">
            <summary>
            Classe de utilidades para códigos de status HTTP.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Utils.StatusCodeUtils.GetDescription(System.Net.HttpStatusCode,System.Globalization.CultureInfo)">
            <summary>
            Método que obtém a descrição de um código de status.
            </summary>
            <param name="statusCode">Código de status o qual se dejesa a descrição.</param>
            <param name="culture">Dados do idioma desejado.</param>
            <returns>Descrição do código de status.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Utils.StatusCodeUtils.GetDescription(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Método que obtém a descrição de um código de status.
            </summary>
            <param name="statusCode">Código de status o qual se deseja a descrição.</param>
            <param name="culture">Dados do idioma desejado.</param>
            <returns>Descrição do código de status.</returns>
        </member>
    </members>
</doc>
