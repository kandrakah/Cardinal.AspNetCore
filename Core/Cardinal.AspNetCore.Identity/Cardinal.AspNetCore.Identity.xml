<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cardinal.AspNetCore.Identity</name>
    </assembly>
    <members>
        <member name="T:Cardinal.AspNetCore.Identity.PermissionAttribute">
            <summary>
            Classe de atributo que define a permissão necessária para acesso ao endpoint com ela decorado.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.#ctor">
            <summary>
            Método construtor.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.#ctor(Cardinal.AspNetCore.Identity.Method)">
            <summary>
            Método construtor.
            </summary>
            <param name="method">Método de execução do endpoint. Veja <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod"/></param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.#ctor(Cardinal.AspNetCore.Identity.PermissionValidationType,System.String[])">
            <summary>
            Método construtor.
            </summary>
            <param name="validationType">Tipo de validação de permissão. Veja <see cref="T:Cardinal.AspNetCore.Identity.PermissionValidationType"/></param>
            <param name="permissions">Permissões requeridas para autorização</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.#ctor(Cardinal.AspNetCore.Identity.Method,Cardinal.AspNetCore.Identity.PermissionValidationType,System.String[])">
            <summary>
            Método construtor.
            </summary>
            <param name="method">Método de execução do endpoint</param>
            <param name="validationType">Tipo de validação de permissão. Veja <see cref="T:Cardinal.AspNetCore.Identity.PermissionValidationType"/></param>
            <param name="permissions">Permissões requeridas para autorização</param>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.PermissionAttribute.PermissionAttributeImpl">
            <summary>
            Implementação do atributo de permissão.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.PermissionAttributeImpl.#ctor(Microsoft.Extensions.Logging.ILogger{Cardinal.AspNetCore.Identity.PermissionAttribute},Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement,System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Método construtor
            </summary>
            <param name="logger">Instância do serviço de log</param>
            <param name="requiredPermissions">Permissões requeridas pelo atributo</param>
            <param name="provider">Instância do provedor de serviços</param>
            <param name="configuration">Instância do container de configurações</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionAttribute.PermissionAttributeImpl.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.IdentityConfigurations">
            <summary>
            Classe de configurações Identity
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.UsePermissionsService">
            <summary>
            Configuração que ativa o serviço de permissões padrão.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.Authority">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.Audience">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ApiName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ApiSecret">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.SaveToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.SupportedTokens">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.RoleClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.NameClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ValidateIssuerSigningKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ValidateIssuer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ValidateAudience">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.ValidateLifetime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.RequireHttpsMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.Scopes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.IdentityConfigurations.PermissionsValidationType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.Method">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Get">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Put">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Post">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Head">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Patch">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Options">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.Method.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.PermissionValidationType">
            <summary>
            Enumerador para indicar o tipo de validação de múltiplas permissões.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.PermissionValidationType.Annonymous">
            <summary>
            Indica possibilidade de acesso anônimo.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.PermissionValidationType.RequireAuthenticatedOnly">
            <summary>
            Indica que o usuário ativo precisa apenas estar autenticado.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.PermissionValidationType.RequireOneOf">
            <summary>
            Indica que o usuário ativo deve ter ao menos uma das permissões.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.PermissionValidationType.RequireAll">
            <summary>
            Indica que o usuário ativo deve ter todas as permissões.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.Extensions.JwtSecurityTokenExtensions">
            <summary>
            Extensões para <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken"/>
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.Extensions.JwtSecurityTokenExtensions.ValidateAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken,Cardinal.AspNetCore.Identity.IdentityConfigurations)">
            <summary>
            Extensão que faz a validação de um token.
            </summary>
            <param name="token">Objeto referenciado</param>
            <param name="settings">Configurações de autoridade</param>
            <returns>Resultado da validação do token</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.IdentityConstants">
            <summary>
            Constantes da biblioteca de identidade.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.IdentityConstants.PERMISSION_ROOT_TAG">
            <summary>
            Permissão mestre do sistema.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.Identity.IdentityConstants.PERMISSION_DEFAULT_TAG">
            <summary>
            Permissão padrão do sistema. Indica que o nome da permissão será o nome da classe de controle.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.DefaultAuthorizationService">
            <summary>
            Implementação padrão do serviço de autorização.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Configuration">
            <summary>
            Instância do provedor de configurações.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Logger">
            <summary>
            Instância do serviço de log.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Accessor">
            <summary>
            Acessor do contexto http.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.#ctor(Microsoft.Extensions.Logging.ILogger{Cardinal.AspNetCore.Identity.DefaultAuthorizationService},Microsoft.Extensions.Configuration.IConfiguration,Cardinal.AspNetCore.ISystemUser,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Método construtor
            </summary>
            <param name="logger">Instância do serviço de logs.</param>
            <param name="configuration">Instância do container de configurações.</param>
            <param name="systemUser">Instância do usuário do sistema.</param>
            <param name="accessor">Instância do accessor do contexto http.</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Authorize(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement)">
            <summary>
            Método que efetua a validação da autorização de acesso.
            </summary>
            <param name="context">Contexto de autorização</param>
            <param name="requiredPermission">Requerimento de permissão</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.LogPermissionErrorMessage(Cardinal.AspNetCore.Identity.PermissionValidationType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="validationType"></param>
            <param name="missingPermissions"></param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.ValidatePermissionByClaims(Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement,System.Collections.Generic.List{System.String}@)">
            <summary>
            Método que efetua a verificação de permissão de uma identidade considerando o requerimento de permissão informado.
            </summary>
            <param name="requiredPermission">Requerimento de permissão</param>
            <param name="missingPermissions"></param>
            <returns>Verdadeiro caso o usuário atenda aos critérios requisitados e falso caso contrário</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.IsRoot(System.String)">
            <summary>
            Método que verifica se o usuário possui permissão máxima.
            </summary>
            <param name="token">Identidade do usuário</param>
            <returns>Verdadeiro caso o usuário possua a permissão máxima e falso caso contrário</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Result(System.Net.HttpStatusCode)">
            <summary>
            
            </summary>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Unauthorized">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Forbid">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.UpdateSystemUser(Cardinal.AspNetCore.Identity.IdentityConfigurations,System.String)">
            <summary>
            Método que faz a atualização dos dados do usuário com informações da autoridade.
            </summary>
            <param name="settings">Configurações da autoridade</param>
            <param name="token">Token de acesso</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.DefaultAuthorizationService.Dispose">
            <summary>
            Método para liberação de recursos usados pelo serviço.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.IAuthorizationService">
            <summary>
            Interface do serviço de autorização
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.IAuthorizationService.Authorize(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement)">
            <summary>
            Método que efetua a validação da autorização de acesso.
            </summary>
            <param name="context">Contexto de autorização</param>
            <param name="requiredPermission">Requerimento de permissão</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.IAuthorizationService.ValidatePermissionByClaims(Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement,System.Collections.Generic.List{System.String}@)">
            <summary>
            Método que efetua a verificação de permissão de uma identidade considerando o requerimento de permissão informado.
            </summary>
            <param name="requiredPermission">Requerimento de permissão</param>
            <param name="missingPermissions"></param>
            <returns>Verdadeiro caso o usuário atenda aos critérios requisitados e falso caso contrário</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.IAuthorizationService.IsRoot(System.String)">
            <summary>
            Método que verifica se o usuário possui permissão máxima.
            </summary>
            <param name="token">Token de autorização</param>
            <returns>Verdadeiro caso o usuário possua a permissão máxima e falso caso contrário</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.Localization.Resource">
            <summary>
              Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ResourceManager">
            <summary>
              Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.Culture">
            <summary>
              Substitui a propriedade CurrentUICulture do thread atual para todas as
              pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_ADDING_USER_DETAILS">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Updating user data with the authority.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_ANNONYMOUS">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Request for access to the anonymous access endpoint {path} by Ip {ip}.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_ERROR_INVALID_TOKEN">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Invalid access token: [{status}: {message}].
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_ERROR_TOKEN_WRONG_FORMAT">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Invalid access token: Wrong format!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_ERROR_UPDATE_SYSTEM_USER">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Failed to update system user: {msg}.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_PROTECTED">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Request for access to the protected access endpoint {path} received from {ip}.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_USER_AUTHORIZED">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The user {usr} is authorized to access the {path} endpoint..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_USER_ISROOT">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The user has master access!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_USER_UNHAUTHORIZED">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Unauthorized user!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.AUTHORIZATION_VALIDATIND_TOKEN">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Validating access token.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_AUTHORIZATION_SERVICE_NOT_REGISTERED">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Authorization service not found. This service is essential for the operation of the permission system. Register an authorization service using the &apos;AddAuthorizationService&apos; extension of &apos;IServicesCollection&apos; in the &apos;Startup&apos; class or disable the service by setting &apos;DeactivePermissionService&apos; to False in &apos;Authority&apos; in your settings file..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_CERTIFICATE_FAIL">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Failed to get the certificate.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_CERTIFICATE_NOT_FOUND">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The certificate has not found.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_PERMISSION_DEFAULT_METHOD_REQUIRED">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The default permission must declare the execution method!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_PERMISSION_MISSING">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Permission denied!.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_PERMISSION_MISSING_MULTI_LOGGER">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The user {usr} does not have one of the required permissions for this service: {pems}.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.ERROR_PERMISSION_MISSING_SINGLE_LOGGER">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The user {usr} does not have any of the necessary permissions to access this service. At least one permission is required: {pem}.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.PERMISSION_DEFAULT_DESCRIPTION">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Service default controller permission..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.PERMISSION_DEFAULT_DESCRIPTION_WITH_NAME">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Default permission for $[CONTROLLER_NAME]..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.PERMISSION_DEFAULT_NAME">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Default.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.PERMISSION_ROOT_DESCRIPTION">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Higher level permission allowing unrestricted access to all functions of the service..
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.PERMISSION_ROOT_NAME">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a Administrator.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.Localization.Resource.TOKEN_VALIDATION_VALID">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a The token is valid!.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement">
            <summary>
            Implementação do requerimento de autorização.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.ValidationType">
            <summary>
            Enumerador para indicar o tipo de validação de múltiplas permissões.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.#ctor(Cardinal.AspNetCore.Identity.Method,Cardinal.AspNetCore.Identity.PermissionValidationType,System.String[])">
            <summary>
            Método construtor
            </summary>
            <param name="method"></param>
            <param name="validationType"></param>
            <param name="requiredPermissions"></param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.Contains(System.String)">
            <summary>
            Método que verifica se a permissão infomada existe no requerimento.
            </summary>
            <param name="permission">Nome da permissão à ser verificada</param>
            <returns>Verdadeiro caso a permissão exista no requerimento e falso caso contrário</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.PermissionsAuthorizationRequirement.ReplaceDefault(System.String)">
            <summary>
            Método que faz a substituição da permissão padrão pelo seu nome correto
            </summary>
            <param name="permission">Nome da permissão à ser adicionada</param>
        </member>
        <member name="M:Cardinal.AspNetCore.Identity.Utils.AuthorityService.GetUserClaimsAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cardinal.AspNetCore.CardinalJwtClaimTypes">
            <summary>
            Constantes para nomes de claims.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.CardinalJwtClaimTypes.Permission">
            <summary>
            Permissão
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.PermissionsValidationType">
            <summary>
            Enumerador que define a forma de obtenção das permissões do usuário.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.PermissionsValidationType.Claim">
            <summary>
            Por claims presentes na identidade.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.PermissionsValidationType.Authority">
            <summary>
            Por consulta direta à autoridade.
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.TokenValidation">
            <summary>
            Enumerador do resultado da validação do token.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.Valid">
            <summary>
            Token válido
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.Expired">
            <summary>
            Token expirado
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.InvalidAudience">
            <summary>
            Audiência inválida
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.InvalidLifetime">
            <summary>
            Token vencido
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.InvalidSignature">
            <summary>
            Assinatura inválida
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.NoExpiration">
            <summary>
            Sem data de expiração.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.NotYetValid">
            <summary>
            Início de validade posterior a atual.
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.ReplayAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.ReplayDetected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Cardinal.AspNetCore.TokenValidation.Error">
            <summary>
            Falha geral
            </summary>
        </member>
        <member name="T:Cardinal.AspNetCore.IdentityUser">
            <summary>
            Classe que representa um usuário ativo no sistema.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.Sub">
            <summary>
            Identificador único do usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.Username">
            <summary>
            Atributo que representa o nome de usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.DisplayName">
            <summary>
            Atributo que representa o nome apresentável do usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.ClientId">
            <summary>
            Identificador único do cliente utilizado pelo usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.IsAuthenticated">
            <summary>
            Atributo que indica se o usuário está autenticado.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.LocalIpAddress">
            <summary>
            Atributo que representa o Ip local do usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.RemoteIpAddress">
            <summary>
            Atributo que representa o Ip remoto do usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.Permissions">
            <summary>
            Atributo com a lista de permissões do usuário.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.Provider">
            <summary>
            Provedor de serviços.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.IdentityUser.Principal">
            <summary>
            Identidade principal do usuário.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.#ctor(System.IServiceProvider)">
            <summary>
            Método construtor.
            </summary>
            <param name="provider">Instância do provedor de serviços</param>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetClaim(System.String)">
            <summary>
            Método que obtém uma claim do usuário de um tipo declarado. 
            Caso hajam várias claims do mesmo tipo, a primeira será retornada.
            </summary>
            <param name="type">Tipo da claim desejada.</param>
            <returns>Claim referente ao tipo solicitado ou null caso a mesma não seja encontrada.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetClaims(System.String)">
            <summary>
            Método que obtém uma enumeração de claims do usuário de um tipo declarado.
            </summary>
            <param name="type">tipo das claims desejadas</param>
            <returns>Enumeração de claims do tipo solicitado.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetSub">
            <summary>
            Método que obtém o id único do usuário.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetUsername">
            <summary>
            Método que obtém o nome de usuário.
            </summary>
            <returns>Nome de usuário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetDisplayName">
            <summary>
            Método que obtém o nome apresentável do usuário.
            </summary>
            <returns>Nome apresentável do usuário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetClientId">
            <summary>
            Método que obtém o Id único do cliente usado pelo usuário.
            </summary>
            <returns>Id único do cliente do usuário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.Authenticated">
            <summary>
            Método que traz se o usuário está autenticado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetLocalIpAddress">
            <summary>
            Método que obtém o Ip local da conexão.
            </summary>
            <returns>Ip local da conexão.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetRemoteIpAddress">
            <summary>
            Método que obtém o Ip remoto da conexão.
            </summary>
            <returns>Ip remoto da conexão.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.GetPermissions">
            <summary>
            Método que obtém as permissões do usuário.
            </summary>
            <returns>Enumerador de permissões do usuário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.HavePermission(System.String)">
            <summary>
            Método que verifica se o usuário tem determinada permissão.
            </summary>
            <param name="permission">Permissão requerida.</param>
            <returns>Verdadeiro caso o usuário possua a permissão requerida e falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.IsRoot">
            <summary>
            Método que verifica se o usuário possui a permissão mestre.
            </summary>
            <returns>Verdadeiro caso o usuário possua a permissão mestre e falso caso contrário.</returns>
        </member>
        <member name="M:Cardinal.AspNetCore.IdentityUser.ToString">
            <summary>
            Método que traz uma cadeia de caracteres que representa o objeto atual.
            </summary>
            <returns>Cadeia de caracteres que representa o objeto atual.</returns>
        </member>
        <member name="T:Cardinal.AspNetCore.TokenValidationResult">
            <summary>
            Classe que representa o resultado de uma validação de token.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.TokenValidationResult.IsValid">
            <summary>
            Atributo que indica se o token é válido.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.TokenValidationResult.Status">
            <summary>
            Atributo que indica o status da validação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.TokenValidationResult.Message">
            <summary>
            Atributo que indica a mensagem de validação.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.TokenValidationResult.Principal">
            <summary>
            Atributo que contém os dados do usuário presentes no token.
            </summary>
        </member>
        <member name="P:Cardinal.AspNetCore.TokenValidationResult.SecurityToken">
            <summary>
            Atributo que contém os dados validados do token.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.TokenValidationResult.#ctor(Cardinal.AspNetCore.TokenValidation,System.String)">
            <summary>
            Método construtor.
            </summary>
            <param name="status">Status da validação.</param>
            <param name="message">Mensagem de validação.</param>
        </member>
        <member name="T:Cardinal.AspNetCore.UserInfo">
            <summary>
            Classe que representa as informações de um usuário providas pela autoridade.
            </summary>
        </member>
        <member name="M:Cardinal.AspNetCore.UserInfo.ToClaims">
            <summary>
            Método que converte este objeto em uma enumeração de claims. Veja <see cref="T:System.Security.Claims.Claim"/>
            </summary>
            <returns>Enumeração de claims do usuário.</returns>
        </member>
        <member name="T:Cardinal.Extensions.AuthoritySettingsExtensions">
            <summary>
            Classe de extensões para <see cref="T:Cardinal.AspNetCore.Identity.IdentityConfigurations"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.AuthoritySettingsExtensions.GetTokenParametesAsync(Cardinal.AspNetCore.Identity.IdentityConfigurations,System.IdentityModel.Tokens.Jwt.JwtSecurityToken)">
            <summary>
            Extensão que retorna os parâmetros de validação de token OAuth.
            </summary>
            <param name="settings">Objeto referenciado</param>
            <param name="token">Token de autenticação</param>
            <returns>Parâmetros de validação do Token. Veja <see cref="T:Microsoft.IdentityModel.Tokens.TokenValidationParameters"/></returns>
        </member>
        <member name="M:Cardinal.Extensions.AuthoritySettingsExtensions.GetSigningKeyAsync(Cardinal.AspNetCore.Identity.IdentityConfigurations,System.IdentityModel.Tokens.Jwt.JwtSecurityToken)">
            <summary>
            Método para obtenção da chave de assinatura do token provida pela autoridade de identificação.
            </summary>
            <param name="settings">Objeto referenciado</param>
            <param name="token">Token de autenticação</param>
            <returns>Chave de segurança provida pela autoridade de identificação.</returns>
        </member>
        <member name="T:Cardinal.Extensions.AuthorizationFilterContextExtensions">
            <summary>
            Classe de extensões para <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.AuthorizationFilterContextExtensions.GetAuthorizationToken(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,System.String)">
            <summary>
            Método que busca o token de autorização da requisição.
            </summary>
            <param name="context">Contexto.</param>
            <param name="type">Tipo de token esperado.</param>
            <returns>Token de autenticação ou null se o valor for vazio.</returns>
        </member>
        <member name="M:Cardinal.Extensions.AuthorizationFilterContextExtensions.GetCurrentUserClaims(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Cardinal.AspNetCore.Identity.IdentityConfigurations)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="T:Cardinal.Extensions.HttpClientExtensions">
            <summary>
            Extensões para <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.HttpClientExtensions.GetUserInfoAsync(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Extensão para busca dos dados do usuário junto à autoridade.
            </summary>
            <param name="client">Objeto referenciado</param>
            <param name="authorityUri">Endereço da autoridade.</param>
            <param name="token">Token de acesso do usuário.</param>
            <returns>Dados do usuário</returns>
        </member>
        <member name="T:Cardinal.Extensions.ICardinalControllerExtensions">
            <summary>
            Classe de extensões para <see cref="T:Cardinal.AspNetCore.IController"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.ICardinalControllerExtensions.GetDefaultPermission(Cardinal.AspNetCore.IController)">
            <summary>
            
            </summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="T:Cardinal.Extensions.IConfigurationExtensions">
            <summary>
            Classe de extensões para <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.IConfigurationExtensions.GetAuthorityConfigurations(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Extensão que traz as configurações tipadas da configuração.
            </summary>
            <param name="configuration">Instância de <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="sectionName">Nome da sessão de configurações</param>
            <returns>Objeto contendo as configurações.</returns>
        </member>
        <member name="T:Cardinal.Extensions.ServiceCollectionExtensions">
            <summary>
            Classe de extensões para <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.ServiceCollectionExtensions.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.Extensions.ServiceCollectionExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Cardinal.Extensions.ServiceCollectionExtensions.AddAuthorizationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extensão que adiciona o serviço padrão de autorização.
            </summary>
            <param name="services">Instância do container de serviços.</param>
        </member>
        <member name="M:Cardinal.Extensions.ServiceCollectionExtensions.AddAuthorizationService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extensão que adiciona o serviço de autorização.
            </summary>
            <typeparam name="TAuthorizationService"></typeparam>
            <param name="services">Instância do container de serviços.</param>
        </member>
        <member name="T:Cardinal.Extensions.TypeExtensions">
            <summary>
            Classe de extensões para <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Cardinal.Extensions.TypeExtensions.GetControllerDefaultPermission(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
    </members>
</doc>
