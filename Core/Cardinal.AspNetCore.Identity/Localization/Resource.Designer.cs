//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cardinal.AspNetCore.Identity.Localization {
    using System;
    
    
    /// <summary>
    ///   Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
    /// </summary>
    // Essa classe foi gerada automaticamente pela classe StronglyTypedResourceBuilder
    // através de uma ferramenta como ResGen ou Visual Studio.
    // Para adicionar ou remover um associado, edite o arquivo .ResX e execute ResGen novamente
    // com a opção /str, ou recrie o projeto do VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cardinal.AspNetCore.Identity.Localization.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Substitui a propriedade CurrentUICulture do thread atual para todas as
        ///   pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Updating user data with the authority.
        /// </summary>
        internal static string AUTHORIZATION_ADDING_USER_DETAILS {
            get {
                return ResourceManager.GetString("AUTHORIZATION_ADDING_USER_DETAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Request for access to the anonymous access endpoint {path} by Ip {ip}.
        /// </summary>
        internal static string AUTHORIZATION_ANNONYMOUS {
            get {
                return ResourceManager.GetString("AUTHORIZATION_ANNONYMOUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Invalid access token: [{status}: {message}].
        /// </summary>
        internal static string AUTHORIZATION_ERROR_INVALID_TOKEN {
            get {
                return ResourceManager.GetString("AUTHORIZATION_ERROR_INVALID_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Invalid access token: Wrong format!.
        /// </summary>
        internal static string AUTHORIZATION_ERROR_TOKEN_WRONG_FORMAT {
            get {
                return ResourceManager.GetString("AUTHORIZATION_ERROR_TOKEN_WRONG_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Failed to update system user: {msg}.
        /// </summary>
        internal static string AUTHORIZATION_ERROR_UPDATE_SYSTEM_USER {
            get {
                return ResourceManager.GetString("AUTHORIZATION_ERROR_UPDATE_SYSTEM_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Request for access to the protected access endpoint {path} received from {ip}.
        /// </summary>
        internal static string AUTHORIZATION_PROTECTED {
            get {
                return ResourceManager.GetString("AUTHORIZATION_PROTECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The user {usr} is authorized to access the {path} endpoint..
        /// </summary>
        internal static string AUTHORIZATION_USER_AUTHORIZED {
            get {
                return ResourceManager.GetString("AUTHORIZATION_USER_AUTHORIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The user has master access!.
        /// </summary>
        internal static string AUTHORIZATION_USER_ISROOT {
            get {
                return ResourceManager.GetString("AUTHORIZATION_USER_ISROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Unauthorized user!.
        /// </summary>
        internal static string AUTHORIZATION_USER_UNHAUTHORIZED {
            get {
                return ResourceManager.GetString("AUTHORIZATION_USER_UNHAUTHORIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Validating access token.
        /// </summary>
        internal static string AUTHORIZATION_VALIDATIND_TOKEN {
            get {
                return ResourceManager.GetString("AUTHORIZATION_VALIDATIND_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Authorization service not found. This service is essential for the operation of the permission system. Register an authorization service using the &apos;AddAuthorizationService&apos; extension of &apos;IServicesCollection&apos; in the &apos;Startup&apos; class or disable the service by setting &apos;DeactivePermissionService&apos; to False in &apos;Authority&apos; in your settings file..
        /// </summary>
        internal static string ERROR_AUTHORIZATION_SERVICE_NOT_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_AUTHORIZATION_SERVICE_NOT_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Failed to get the certificate.
        /// </summary>
        internal static string ERROR_CERTIFICATE_FAIL {
            get {
                return ResourceManager.GetString("ERROR_CERTIFICATE_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The certificate has not found.
        /// </summary>
        internal static string ERROR_CERTIFICATE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CERTIFICATE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Could not retrieve user profile data: [{status}] {message}.
        /// </summary>
        internal static string ERROR_GET_USERINFO {
            get {
                return ResourceManager.GetString("ERROR_GET_USERINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The default permission must declare the execution method!.
        /// </summary>
        internal static string ERROR_PERMISSION_DEFAULT_METHOD_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_PERMISSION_DEFAULT_METHOD_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Permission denied!.
        /// </summary>
        internal static string ERROR_PERMISSION_MISSING {
            get {
                return ResourceManager.GetString("ERROR_PERMISSION_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The user {usr} does not have one of the required permissions for this service: {pems}.
        /// </summary>
        internal static string ERROR_PERMISSION_MISSING_MULTI_LOGGER {
            get {
                return ResourceManager.GetString("ERROR_PERMISSION_MISSING_MULTI_LOGGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The user {usr} does not have any of the necessary permissions to access this service. At least one permission is required: {pem}.
        /// </summary>
        internal static string ERROR_PERMISSION_MISSING_SINGLE_LOGGER {
            get {
                return ResourceManager.GetString("ERROR_PERMISSION_MISSING_SINGLE_LOGGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Service default controller permission..
        /// </summary>
        internal static string PERMISSION_DEFAULT_DESCRIPTION {
            get {
                return ResourceManager.GetString("PERMISSION_DEFAULT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default permission for $[CONTROLLER_NAME]..
        /// </summary>
        internal static string PERMISSION_DEFAULT_DESCRIPTION_WITH_NAME {
            get {
                return ResourceManager.GetString("PERMISSION_DEFAULT_DESCRIPTION_WITH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default.
        /// </summary>
        internal static string PERMISSION_DEFAULT_NAME {
            get {
                return ResourceManager.GetString("PERMISSION_DEFAULT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Higher level permission allowing unrestricted access to all functions of the service..
        /// </summary>
        internal static string PERMISSION_ROOT_DESCRIPTION {
            get {
                return ResourceManager.GetString("PERMISSION_ROOT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Administrator.
        /// </summary>
        internal static string PERMISSION_ROOT_NAME {
            get {
                return ResourceManager.GetString("PERMISSION_ROOT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The token is valid!.
        /// </summary>
        internal static string TOKEN_VALIDATION_VALID {
            get {
                return ResourceManager.GetString("TOKEN_VALIDATION_VALID", resourceCulture);
            }
        }
    }
}
